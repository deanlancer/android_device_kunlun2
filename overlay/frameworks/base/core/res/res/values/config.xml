<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2009 The Android Open Source Project
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
	
    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)
         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux
         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).
         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>10</item>
        <item>30</item>
        <item>41</item>
        <item>60</item>
        <item>82</item>
        <item>100</item>
        <item>124</item>
        <item>158</item>
        <item>206</item>
        <item>275</item>
        <item>481</item>
        <item>618</item>
        <item>756</item>
        <item>989</item>
        <item>1305</item>
        <item>1511</item>
        <item>2061</item>
        <item>2748</item>
        <item>3100</item>
    </integer-array>
	
    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.
         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined
         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessDisplayValuesNits">
        <item>2</item>   <!-- 0-1 -->                                   
        <item>10</item>  <!-- 1-2 -->
        <item>35</item>  <!-- 2-3 -->
        <item>45</item>  <!-- 3-10 -->
        <item>55</item>  <!-- 10-30 -->
        <item>65</item>  <!-- 30-41 -->
        <item>75</item>  <!-- 41-60 -->
        <item>85</item>  <!-- 60-82 -->
        <item>100</item>  <!-- 82-100 -->
        <item>110</item>  <!-- 100-124 -->
        <item>140</item>  <!-- 123-158 -->
        <item>180</item>  <!-- 158-206 -->
        <item>210</item>  <!-- 206-275 -->
        <item>250</item>  <!-- 277-481 -->
        <item>280</item>  <!-- 481-618 -->
        <item>320</item>  <!-- 618-756 -->
        <item>340</item>  <!-- 756-989 -->
        <item>360</item>  <!-- 989-1305 -->
        <item>380</item>  <!-- 1305-1511 -->
        <item>410</item>  <!-- 1511-2061 -->
        <item>460</item>  <!-- 2061-2748 -->
        <item>490</item>  <!-- 2748-3100 -->
        <item>527</item>  <!-- 3100+ -->
    </integer-array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.
         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
        <item>6</item>
        <item>7</item>
        <item>8</item>
        <item>9</item>
        <item>10</item>
        <item>11</item>
        <item>12</item>
        <item>13</item>
        <item>14</item>
        <item>15</item>
        <item>16</item>
        <item>17</item>
        <item>18</item>
        <item>19</item>
        <item>20</item>
        <item>21</item>
        <item>22</item>
        <item>23</item>
        <item>24</item>
        <item>25</item>
        <item>26</item>
        <item>27</item>
        <item>28</item>
        <item>29</item>
        <item>30</item>
        <item>31</item>
        <item>32</item>
        <item>33</item>
        <item>34</item>
        <item>35</item>
        <item>36</item>
        <item>37</item>
        <item>38</item>
        <item>39</item>
        <item>40</item>
        <item>41</item>
        <item>42</item>
        <item>43</item>
        <item>44</item>
        <item>45</item>
        <item>46</item>
        <item>47</item>
        <item>48</item>
        <item>49</item>
        <item>50</item>
        <item>51</item>
        <item>52</item>
        <item>53</item>
        <item>54</item>
        <item>55</item>
        <item>56</item>
        <item>57</item>
        <item>58</item>
        <item>59</item>
        <item>60</item>
        <item>61</item>
        <item>62</item>
        <item>63</item>
        <item>64</item>
        <item>65</item>
        <item>66</item>
        <item>67</item>
        <item>68</item>
        <item>69</item>
        <item>70</item>
        <item>71</item>
        <item>72</item>
        <item>73</item>
        <item>74</item>
        <item>75</item>
        <item>76</item>
        <item>77</item>
        <item>78</item>
        <item>79</item>
        <item>80</item>
        <item>81</item>
        <item>82</item>
        <item>83</item>
        <item>84</item>
        <item>85</item>
        <item>86</item>
        <item>87</item>
        <item>88</item>
        <item>89</item>
        <item>90</item>
        <item>91</item>
        <item>92</item>
        <item>93</item>
        <item>94</item>
        <item>95</item>
        <item>96</item>
        <item>97</item>
        <item>98</item>
        <item>99</item>
        <item>100</item>
        <item>101</item>
        <item>102</item>
        <item>103</item>
        <item>104</item>
        <item>105</item>
        <item>106</item>
        <item>107</item>
        <item>108</item>
        <item>109</item>
        <item>110</item>
        <item>111</item>
        <item>112</item>
        <item>113</item>
        <item>114</item>
        <item>115</item>
        <item>116</item>
        <item>117</item>
        <item>118</item>
        <item>119</item>
        <item>120</item>
        <item>121</item>
        <item>122</item>
        <item>123</item>
        <item>124</item>
        <item>125</item>
        <item>126</item>
        <item>127</item>
        <item>128</item>
        <item>129</item>
        <item>130</item>
        <item>131</item>
        <item>132</item>
        <item>133</item>
        <item>134</item>
        <item>135</item>
        <item>136</item>
        <item>137</item>
        <item>138</item>
        <item>139</item>
        <item>140</item>
        <item>141</item>
        <item>142</item>
        <item>143</item>
        <item>144</item>
        <item>145</item>
        <item>146</item>
        <item>147</item>
        <item>148</item>
        <item>149</item>
        <item>150</item>
        <item>151</item>
        <item>152</item>
        <item>153</item>
        <item>154</item>
        <item>155</item>
        <item>156</item>
        <item>157</item>
        <item>158</item>
        <item>159</item>
        <item>160</item>
        <item>161</item>
        <item>162</item>
        <item>163</item>
        <item>164</item>
        <item>165</item>
        <item>166</item>
        <item>167</item>
        <item>168</item>
        <item>169</item>
        <item>170</item>
        <item>171</item>
        <item>172</item>
        <item>173</item>
        <item>174</item>
        <item>175</item>
        <item>176</item>
        <item>177</item>
        <item>178</item>
        <item>179</item>
        <item>180</item>
        <item>181</item>
        <item>182</item>
        <item>183</item>
        <item>184</item>
        <item>185</item>
        <item>186</item>
        <item>187</item>
        <item>188</item>
        <item>189</item>
        <item>190</item>
        <item>191</item>
        <item>192</item>
        <item>193</item>
        <item>194</item>
        <item>195</item>
        <item>196</item>
        <item>197</item>
        <item>198</item>
        <item>199</item>
        <item>200</item>
        <item>201</item>
        <item>202</item>
        <item>203</item>
        <item>204</item>
        <item>205</item>
        <item>206</item>
        <item>207</item>
        <item>208</item>
        <item>209</item>
        <item>210</item>
        <item>211</item>
        <item>212</item>
        <item>213</item>
        <item>214</item>
        <item>215</item>
        <item>216</item>
        <item>217</item>
        <item>218</item>
        <item>219</item>
        <item>220</item>
        <item>221</item>
        <item>222</item>
        <item>223</item>
        <item>224</item>
        <item>225</item>
        <item>226</item>
        <item>227</item>
        <item>228</item>
        <item>229</item>
        <item>230</item>
        <item>231</item>
        <item>232</item>
        <item>233</item>
        <item>234</item>
        <item>235</item>
        <item>236</item>
        <item>237</item>
        <item>238</item>
        <item>239</item>
        <item>240</item>
        <item>241</item>
        <item>242</item>
        <item>243</item>
        <item>244</item>
        <item>245</item>
        <item>246</item>
        <item>247</item>
        <item>248</item>
        <item>249</item>
        <item>250</item>
        <item>251</item>
        <item>252</item>
        <item>253</item>
        <item>254</item>
        <item>255</item>
    </integer-array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.
         This array should be equal in size to config_screenBrightnessBacklight -->
    <integer-array name="config_screenBrightnessNits">
        <item>2</item>
        <item>3</item>
        <item>5</item>
        <item>6</item>
        <item>8</item>
        <item>10</item>
        <item>11</item>
        <item>13</item>
        <item>15</item>
        <item>16</item>
        <item>18</item>
        <item>20</item>
        <item>21</item>
        <item>23</item>
        <item>25</item>
        <item>26</item>
        <item>28</item>
        <item>29</item>
        <item>31</item>
        <item>33</item>
        <item>34</item>
        <item>36</item>
        <item>38</item>
        <item>39</item>
        <item>41</item>
        <item>43</item>
        <item>44</item>
        <item>46</item>
        <item>48</item>
        <item>49</item>
        <item>51</item>
        <item>52</item>
        <item>54</item>
        <item>56</item>
        <item>57</item>
        <item>59</item>
        <item>61</item>
        <item>62</item>
        <item>64</item>
        <item>66</item>
        <item>67</item>
        <item>69</item>
        <item>71</item>
        <item>72</item>
        <item>74</item>
        <item>75</item>
        <item>77</item>
        <item>79</item>
        <item>80</item>
        <item>82</item>
        <item>84</item>
        <item>85</item>
        <item>87</item>
        <item>89</item>
        <item>90</item>
        <item>92</item>
        <item>94</item>
        <item>95</item>
        <item>97</item>
        <item>98</item>
        <item>100</item>
        <item>102</item>
        <item>103</item>
        <item>105</item>
        <item>107</item>
        <item>108</item>
        <item>110</item>
        <item>112</item>
        <item>113</item>
        <item>115</item>
        <item>117</item>
        <item>118</item>
        <item>120</item>
        <item>121</item>
        <item>123</item>
        <item>125</item>
        <item>126</item>
        <item>128</item>
        <item>130</item>
        <item>131</item>
        <item>133</item>
        <item>135</item>
        <item>136</item>
        <item>138</item>
        <item>140</item>
        <item>142</item>
        <item>143</item>
        <item>145</item>
        <item>146</item>
        <item>148</item>
        <item>150</item>
        <item>151</item>
        <item>153</item>
        <item>155</item>
        <item>156</item>
        <item>158</item>
        <item>160</item>
        <item>161</item>
        <item>163</item>
        <item>165</item>
        <item>166</item>
        <item>168</item>
        <item>169</item>
        <item>171</item>
        <item>173</item>
        <item>174</item>
        <item>176</item>
        <item>178</item>
        <item>179</item>
        <item>181</item>
        <item>183</item>
        <item>184</item>
        <item>186</item>
        <item>188</item>
        <item>189</item>
        <item>191</item>
        <item>192</item>
        <item>194</item>
        <item>196</item>
        <item>197</item>
        <item>199</item>
        <item>201</item>
        <item>202</item>
        <item>204</item>
        <item>206</item>
        <item>207</item>
        <item>209</item>
        <item>211</item>
        <item>212</item>
        <item>214</item>
        <item>215</item>
        <item>217</item>
        <item>219</item>
        <item>220</item>
        <item>222</item>
        <item>224</item>
        <item>225</item>
        <item>227</item>
        <item>229</item>
        <item>230</item>
        <item>232</item>
        <item>234</item>
        <item>235</item>
        <item>237</item>
        <item>238</item>
        <item>240</item>
        <item>242</item>
        <item>243</item>
        <item>245</item>
        <item>247</item>
        <item>248</item>
        <item>250</item>
        <item>252</item>
        <item>253</item>
        <item>255</item>
        <item>257</item>
        <item>258</item>
        <item>260</item>
        <item>261</item>
        <item>263</item>
        <item>265</item>
        <item>266</item>
        <item>268</item>
        <item>270</item>
        <item>271</item>
        <item>273</item>
        <item>275</item>
        <item>276</item>
        <item>278</item>
        <item>280</item>
        <item>282</item>
        <item>283</item>
        <item>285</item>
        <item>286</item>
        <item>288</item>
        <item>290</item>
        <item>291</item>
        <item>293</item>
        <item>295</item>
        <item>296</item>
        <item>298</item>
        <item>300</item>
        <item>301</item>
        <item>303</item>
        <item>305</item>
        <item>306</item>
        <item>308</item>
        <item>309</item>
        <item>311</item>
        <item>313</item>
        <item>314</item>
        <item>316</item>
        <item>318</item>
        <item>319</item>
        <item>321</item>
        <item>323</item>
        <item>324</item>
        <item>326</item>
        <item>328</item>
        <item>329</item>
        <item>331</item>
        <item>332</item>
        <item>334</item>
        <item>336</item>
        <item>337</item>
        <item>339</item>
        <item>341</item>
        <item>342</item>
        <item>344</item>
        <item>346</item>
        <item>347</item>
        <item>349</item>
        <item>351</item>
        <item>352</item>
        <item>354</item>
        <item>355</item>
        <item>357</item>
        <item>359</item>
        <item>360</item>
        <item>362</item>
        <item>364</item>
        <item>365</item>
        <item>367</item>
        <item>369</item>
        <item>370</item>
        <item>372</item>
        <item>374</item>
        <item>375</item>
        <item>377</item>
        <item>378</item>
        <item>380</item>
        <item>382</item>
        <item>383</item>
        <item>385</item>
        <item>387</item>
        <item>388</item>
        <item>390</item>
        <item>392</item>
        <item>393</item>
        <item>395</item>
        <item>397</item>
        <item>398</item>
        <item>400</item>
        <item>401</item>
        <item>403</item>
        <item>405</item>
        <item>406</item>
        <item>408</item>
        <item>410</item>
        <item>411</item>
        <item>413</item>
        <item>431</item>
        <item>463</item>
        <item>500</item>
        <item>527</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisBrightLevels">
        <item>1000</item>
        <item>1000</item>
        <item>500</item>
        <item>300</item>
        <item>100</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisDarkLevels">
        <item>800</item>
        <item>800</item>
        <item>400</item>
        <item>200</item>
        <item>200</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_dynamicHysteresisBrightLevels, and the new darkening
         hysteresis constraint value is the n-th element of config_dynamicHysteresisDarkLevels.
         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                      calculated index
         value < lux[0]                 0
         lux[n] <= value < lux[n+1]     n+1
         lux[MAX] <= value              MAX+1 -->
    <integer-array name="config_dynamicHysteresisLuxLevels">
        <item>3</item>
        <item>41</item>
        <item>618</item>
        <item>989</item>
    </integer-array>

    <!-- Night display color temperature calibration -->
    <string-array name="config_nightDisplayColorTemperatureCoefficients">
        <!-- R a-coefficient --> <item>0.0</item>
        <!-- R b-coefficient --> <item>0.0</item>
        <!-- R y-intercept --> <item>1.0</item>
        <!-- G a-coefficient --> <item>-0.000000014365268757</item>
        <!-- G b-coefficient --> <item>0.000255092801250106</item>
        <!-- G y-intercept --> <item>-0.064156942434907716</item>
        <!-- B a-coefficient --> <item>-0.000000000910931179</item>
        <!-- B b-coefficient --> <item>0.000207598323269139</item>
        <!-- B y-intercept --> <item>-0.349361641294833436</item>
    </string-array>

    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">10</integer>

     <!-- Minimum screen brightness setting allowed by power manager.
          The user is forbidden from setting the brightness below this level.
          Equivalent to 1/255. -->
    <item name="config_screenBrightnessSettingMinimumFloat" format="float" type="dimen">0.0</item>

     <!-- The user is forbidden from setting the brightness above this level.
          Equivalent to 255/255. -->
     <item name="config_screenBrightnessSettingMaximumFloat" format="float" type="dimen">1.0</item>

     <!-- Default screen brightness setting set.
         Must be in the range specified by minimum and maximum.
         Equivalent to 128/255. -->
     <item name="config_screenBrightnessSettingDefaultFloat" format="float" type="dimen">0.5</item>

     <!-- Slow brightness animation ramp rate in float. -->
     <item name="config_brightnessRampRateSlowFloat" format="float" type="dimen">0.025</item>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
     <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
     <integer name="config_autoBrightnessDarkeningLightDebounce">5000</integer>

    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
     <fraction name="config_autoBrightnessAdjustmentMaxGamma">300.0%</fraction>
	
    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true-->
    <bool translatable="false" name="skip_restoring_network_selection">true</bool>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">true</bool>

     <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array name="networkAttributes">
        <item>wifi,1,1,1,-1,true</item>
        <item>mobile,0,0,0,-1,true</item>
        <item>mobile_mms,2,0,2,60000,true</item>
        <item>mobile_supl,3,0,2,60000,true</item>
        <item>mobile_dun,4,0,2,60000,true</item>
        <item>mobile_hipri,5,0,3,60000,true</item>
        <item>mobile_fota,10,0,2,60000,true</item>
        <item>mobile_ims,11,0,2,60000,true</item>
        <item>mobile_cbs,12,0,2,60000,true</item>
        <item>wifi_p2p,13,1,0,-1,true</item>
        <item>mobile_ia,14,0,2,-1,true</item>
        <item>mobile_emergency,15,0,2,-1,true</item>
        <item>ethernet,9,9,9,-1,true</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array name="radioAttributes">
        <item>1,1</item>
        <item>0,1</item>
        <item>7,1</item>
    </string-array>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>

    <!-- Set to true if the wifi display supports compositing content stored
         in gralloc protected buffers.  For this to be true, there must exist
         a protected hardware path for surface flinger to composite and send
         protected buffers to the wifi display video encoder.
         If this flag is false, we advise applications not to use protected
         buffers (if possible) when presenting content to a wifi display because
         the content may be blanked.
         This flag controls whether the {@link Display#FLAG_SUPPORTS_PROTECTED_BUFFERS}
         flag is set for wifi displays.
    -->
    <bool name="config_wifiDisplaySupportsProtectedBuffers">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Is the device capable of hot swapping an ICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- Configure mobile tcp buffer sizes in the form:
         rat-name:rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max
         If no value is found for the rat-name in use, the system default will be applied.
    -->
    <string-array name="config_mobile_tcp_buffers">
        <item>lte:2097152,4194304,8388608,262144,524288,1048576</item>
        <item>lte_ca:2097152,4194304,8388608,4096,1048576,2097152</item>
        <item>umts:4094,87380,1220608,4096,16384,1220608</item>
        <item>hspa:4094,87380,1220608,4096,16384,1220608</item>
        <item>hsupa:4094,87380,1220608,4096,16384,1220608</item>
        <item>hsdpa:4094,87380,1220608,4096,16384,1220608</item>
        <item>hspap:4094,87380,1220608,4096,16384,1220608</item>
        <item>edge:4093,26280,35040,4096,16384,35040</item>
        <item>gprs:4092,8760,11680,4096,8760,11680</item>
        <item>evdo:4094,87380,524288,4096,16384,262144</item>
    </string-array>

    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VoLTE should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_volte_available">true</bool>

    <!-- Flag specifying whether WFC over IMS is available on device -->
    <bool name="config_device_wfc_ims_available">true</bool>
    <bool name="config_device_vt_available">true</bool>

    <!-- Flag specifying whether WFC over IMS should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_wfc_ims_available">true</bool>

    <!-- IWLAN data service package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_wlan_data_service_package">vendor.qti.iwlan</string>

    <!-- IWLAN network service package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_wlan_network_service_package">vendor.qti.iwlan</string>

    <!-- Telephony qualified networks service package name to bind to by default. -->
    <string name="config_qualified_networks_service_package">vendor.qti.iwlan</string>

    <!-- Config determines whether to update phone object when voice registration
         state changes. Voice radio tech change will always trigger an update of
         phone object irrespective of this config -->
    <bool name="config_switch_phone_on_voice_reg_state_change">false</bool>

    <!-- Flag indicating if the speed up audio on mt call code should be executed -->
    <bool name="config_speed_up_audio_on_mt_calls">true</bool>			
	
    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>15</item>
        <item>28</item>
        <item>15</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>18</item>
        <item>36</item>
        <item>18</item>
    </integer-array>
	
    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>20</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about hitting a scroll barrier -->
    <integer-array name="config_scrollBarrierVibePattern">
        <item>20</item>
        <item>10</item>
        <item>10</item>
    </integer-array>

    <!-- Enables or disables haptic effect when the text insertion/selection handle is moved
         manually by the user. Off by default, since the expected haptic feedback may not be
         available on some devices. -->
    <bool name="config_enableHapticTextHandle">true</bool>
	
    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"system/framework/arm64/boot.oat"</item>
        <item>"system/framework/arm64/boot.vdex"</item>
        <item>"/system/framework/boot-framework.vdex"</item>
        <item>"/system/framework/framework.jar"</item>
        <item>"system/framework/arm64/boot-core-libart.oat"</item>
        <item>"system/framework/arm64/boot-core-libart.vdex"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/apex/com.android.art/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.art/javalib/core-libart.jar"</item>
        <item>"/system_ext/priv-app/SystemUI/SystemUI.apk"</item>
        <item>"/system_ext/priv-app/SystemUI/oat/arm64/SystemUI.odex"</item>
        <item>"/system/bin/surfaceflinger"</item>
    </string-array>
	
    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
    <integer name="config_num_physical_slots">2</integer>
	
    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>
	
    <!-- ComponentName of a dream to show whenever the system would otherwise have
         gone to sleep.  When the PowerManager is asked to go to sleep, it will instead
         try to start this dream if possible.  The dream should typically call startDozing()
         to put the display into a low power state and allow the application processor
         to be suspended.  When the dream ends, the system will go to sleep as usual.
         Specify the component name or an empty string if none.
         Note that doze dreams are not subject to the same start conditions as ordinary dreams.
         Doze dreams will run whenever the power manager is in a dozing state. -->
    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- If true, the doze component is not started until after the screen has been
         turned off and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOffByDefault">true</bool>

    <!-- Doze: check proximity sensor before pulsing? -->
    <bool name="doze_proximity_check_before_pulse">true</bool>

    <!-- <bool name="config_dozePulsePickup">true</bool>
    <bool name="config_dozeWakeLockScreenSensorAvailable">true</bool>
    <bool name="config_dozePulseTilt">true</bool>
    <bool name="config_dozePulseProximity">true</bool> -->

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.
         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.
         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">false</bool>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">1</integer>

    <!-- Whether the always on display mode is available. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- The bounding path of the cutout region of the main built-in display.
         Must either be empty if there is no cutout region, or a string that is parsable by
         {@link android.util.PathParser}.
         The path is assumed to be specified in display coordinates with pixel units and in
         the display's native orientation, with the origin of the coordinate system at the
         center top of the display.
         To facilitate writing device-independent emulation overlays, the marker `@dp` can be
         appended after the path string to interpret coordinates in dp instead of px units.
         Note that a physical cutout should be configured in pixels for the best results.
         Example for a 10px x 10px square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z</string>
         Example for a 10dp x 10dp square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z @dp</string>
         @see https://www.w3.org/TR/SVG/paths.html#PathData
         -->
    <string translatable="false" name="config_mainBuiltInDisplayCutout">M -58,0 L -58,74 L 58,74 L 58,0 Z</string>

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>

    <!-- Lockscreen rotation is default disabled into fmwk -->              
    <bool name="config_enableLockScreenRotation">false</bool>

    <!-- Indicate whether closing the lid causes the device to go to sleep and opening
         it causes the device to wake up.
         The default is false. -->
    <bool name="config_lidControlsSleep">true</bool>

    <!-- Whether the Unprocessed audio source supports the required frequency range and level -->
    <bool name="config_supportAudioSourceUnprocessed">true</bool>

    <!-- Location Providers -->
    <string-array name="config_locationProviderPackageNames">
        <item>com.android.location.fused</item>
        <item>com.google.android.gms</item>
    </string-array>
        <!-- Whether to enable network location overlay which allows network
         location provider to be replaced by an app at run-time. When disabled,
         only the config_networkLocationProviderPackageName package will be
         searched for network location provider, otherwise packages whose
         signature matches the signatures of config_locationProviderPackageNames
         will be searched, and the service with the highest version number will
         be picked. Anyone who wants to disable the overlay mechanism can set it
         to false.
         -->
    <bool name="config_enableNetworkLocationOverlay" translatable="false">false</bool>
    <!-- Package name providing network location support. Used only when
         config_enableNetworkLocationOverlay is false. -->
    <string name="config_networkLocationProviderPackageName" translatable="false">com.google.android.gms</string>
        <!-- Whether to enable geocoder overlay which allows geocoder to be replaced
         by an app at run-time. When disabled, only the
         config_geocoderProviderPackageName package will be searched for
         geocoder, otherwise packages whose signature matches the signatures of
         config_locationProviderPackageNames will be searched, and the service
         with the highest version number will be picked. Anyone who wants to
         disable the overlay mechanism can set it to false.
         -->
    <bool name="config_enableGeocoderOverlay" translatable="false">false</bool>
    <!-- Package name providing geocoder API support. Used only when
         config_enableGeocoderOverlay is false. -->
    <string name="config_geocoderProviderPackageName" translatable="false">com.google.android.gms</string>

    <!-- Whether safe headphone volume is enabled or not (country specific). -->
    <bool name="config_safe_media_volume_enabled">false</bool>
    <!-- Whether safe headphone volume warning dialog is disabled on Vol+ (operator specific). -->
    <!-- <bool name="config_safe_media_disable_on_volume_up">true</bool> -->

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
    <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>
    
    <!-- The OEM specified sensor type for the gesture to launch the camera app. -->
    <integer name="config_cameraLaunchGestureSensorType">33240633</integer>
    <!-- The OEM specified sensor string type for the gesture to launch camera app, this value
         must match the value of config_cameraLaunchGestureSensorType in OEM's HAL -->
    <string translatable="false" name="config_cameraLaunchGestureSensorStringType">com.lenovo.sensor.twisttwice</string>

    <!-- List supported color modes. -->
    <integer-array name="config_availableColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL -->
        <item>1</item> <!-- COLOR_MODE_BOOSTED -->
        <item>2</item> <!-- COLOR_MODE_SATURATED -->
        <item>3</item> <!-- COLOR_MODE_AUTOMATIC -->
    </integer-array>

    <!-- Color mode to use when accessibility transforms are enabled. This color mode must be
     supported by the device, but not necessarily appear in config_availableColorModes. The
     regularly selected color mode will be used if this value is negative. -->
    <integer name="config_accessibilityColorMode">2</integer>

    <!-- The following two arrays specify which color space to use for display composition when a
         certain color mode is active.
         Composition color spaces are defined in android.view.Display.COLOR_MODE_xxx, and color
         modes are defined in ColorDisplayManager.COLOR_MODE_xxx and
         ColorDisplayManager.VENDOR_COLOR_MODE_xxx.
         The color space COLOR_MODE_DEFAULT (0) lets the system select the most appropriate
         composition color space for currently displayed content. Other values (e.g.,
         COLOR_MODE_SRGB) override system selection; these other color spaces must be supported by
         the device for for display composition.
         If a color mode does not have a corresponding color space specified in this array, the
         currently set composition color space will not be modified.-->
    <integer-array name="config_displayCompositionColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL   -->
        <item>1</item> <!-- COLOR_MODE_BOOSTED   -->
        <item>2</item> <!-- COLOR_MODE_SATURATED -->
    </integer-array>

    <integer-array name="config_displayCompositionColorSpaces">
        <item>0</item> <!-- COLOR_MODE_DEFAULT    -->
        <item>0</item> <!-- COLOR_MODE_DEFAULT    -->
        <item>0</item> <!-- COLOR_MODE_DEFAULT    -->
    </integer-array>


<!-- Enable sms authorization framework-->
    <!-- <bool name="config_sms_authorization_enabled">enabled</bool> -->

<!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- If this is true, the screen will fade off. -->
    <bool name="config_animateScreenLights">false</bool>

    <!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
         when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
         where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
         and Strength as defined in Authenticators.java -->
    <string-array name="config_biometric_sensors" translatable="false" >
        <item>0:2:15</item> <!-- ID0:Fingerprint:Strong -->
    </string-array>

    <!-- Flag indicating whether the surface flinger has limited
         alpha compositing functionality in hardware.  If set, the window
         manager will disable alpha trasformation in animations where not
         strictly needed. -->
    <bool name="config_sf_limitedAlpha">true</bool>

     <!-- Whether or not wcg (wide color gamut) should be enabled on this device,
     we only enabled it while the device has ability of mixed color spaces composition -->
     <bool name="config_enableWcgMode">true</bool>

     <!-- Control the behavior when the user long presses the power button.
            0 - Nothing
            1 - Global actions menu
            2 - Power off (with confirmation)
            3 - Power off (without confirmation)
            4 - Go to voice assist
            5 - Go to assistant (Settings.Secure.ASSISTANT)
    -->
    <integer name="config_longPressOnPowerBehavior">1</integer>

    <!-- Control the behavior when the user presses the power and volume up buttons together.
            0 - Nothing
            1 - Mute toggle
            2 - Global actions menu
    -->
    <integer name="config_keyChordPowerVolumeUp">1</integer>

    <!-- Flag indicating whether the surface flinger is inefficient
         at performing a blur.  Used by parts of the UI to turn off
         the blur effect where it isn't worth the performance hit.
         As of Honeycomb, blurring is not supported anymore. -->
    <bool name="config_sf_slowBlur">false</bool>
</resources>
